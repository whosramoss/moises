// Mocks generated by Mockito 5.4.0 from annotations
// in moises/test/src/endpoints/moises_job_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:moises/src/infrastructure/connect/moises_connect.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MoisesConnect].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoisesConnect extends _i1.Mock implements _i3.MoisesConnect {
  MockMoisesConnect() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response<dynamic>> get(
    String? path, {
    Map<String, dynamic>? headers,
    Map<String, dynamic>? queryParameters,
    bool? responseTypeBytes = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #headers: headers,
            #queryParameters: queryParameters,
            #responseTypeBytes: responseTypeBytes,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #headers: headers,
              #queryParameters: queryParameters,
              #responseTypeBytes: responseTypeBytes,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);
  @override
  _i4.Future<_i2.Response<dynamic>> post(
    String? path, {
    dynamic data,
    Map<String, dynamic>? headers,
    Map<String, dynamic>? queryParameters,
    bool? responseTypeBytes = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #headers: headers,
            #queryParameters: queryParameters,
            #responseTypeBytes: responseTypeBytes,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #headers: headers,
              #queryParameters: queryParameters,
              #responseTypeBytes: responseTypeBytes,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);
  @override
  _i4.Future<_i2.Response<dynamic>> put(
    String? path, {
    dynamic data,
    Map<String, dynamic>? headers,
    Map<String, dynamic>? queryParameters,
    bool? responseTypeBytes = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #headers: headers,
            #queryParameters: queryParameters,
            #responseTypeBytes: responseTypeBytes,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #headers: headers,
              #queryParameters: queryParameters,
              #responseTypeBytes: responseTypeBytes,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);
  @override
  _i4.Future<_i2.Response<dynamic>> patch(
    String? path, {
    dynamic data,
    Map<String, dynamic>? headers,
    Map<String, dynamic>? queryParameters,
    bool? responseTypeBytes = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #headers: headers,
            #queryParameters: queryParameters,
            #responseTypeBytes: responseTypeBytes,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #headers: headers,
              #queryParameters: queryParameters,
              #responseTypeBytes: responseTypeBytes,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);
  @override
  _i4.Future<_i2.Response<dynamic>> delete(
    String? path, {
    dynamic data,
    Map<String, dynamic>? headers,
    Map<String, dynamic>? queryParameters,
    bool? responseTypeBytes = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #headers: headers,
            #queryParameters: queryParameters,
            #responseTypeBytes: responseTypeBytes,
          },
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #headers: headers,
              #queryParameters: queryParameters,
              #responseTypeBytes: responseTypeBytes,
            },
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);
}
